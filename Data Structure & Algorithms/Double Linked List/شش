void swap(int firstItemIdx, int secondItemIdx){
    if(firstItemIdx > secondItemIdx){
        std::swap(firstItemIdx , secondItemIdx);
    }

    if(firstItemIdx < 0 || secondItemIdx >= length){
        cerr << "Index Out Of Range:(" << endl;
        return;
    }

    Node<T> *pFirst = first, *First;
    Node<T> *pSecond = first, *second;
    Node<T> *temp;

    //If first node is head so previous is equal to null
    if(firstItemIdx == 0){
        pFirst = nullptr;
        First = first;
    }
    else{
        for (int i = 0; i < firstItemIdx-1 ; ++i) {
            pFirst = pFirst->next;
        }
        First = pFirst->next;
    }

    for (int i = 0; i < secondItemIdx-1; ++i) {
        pSecond = pSecond->next;
    }
    second = pSecond->next;
    temp = second->next;

    // If first node is head update it
    if(pFirst == nullptr){
        first = second;
        second->prev = nullptr;
    }
    else{
        pFirst->next = second;
        second->prev = pFirst;
    }

    // If second node is last update it
    if(second->next == nullptr){
        last = First;
    }

    pSecond->next = First;
    second->next = First->next;
    First->next = temp;

    if (First->next) {
        First->next->prev = First;
    }
    if (second->next) {
        second->next->prev = second;
    }

    //Swap The Previous Nodes
    temp = First->prev ;
    First->prev = second->prev ;
    second->prev = Temp ;

    //Update The next of Previous Nodes
    if (First->prev) {
        First->prev->next = First;
    }
    if (second->prev) {
        second->prev->next = second;
    }
}